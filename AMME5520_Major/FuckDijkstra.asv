%% AMME5520 Advanced Systems
% Assignment 1 Q1
clc
clear all
%close all

%*************** Starting and Ending Nodes for user to edit ***************
start = 1;      %start
ending = 2;     %end
%**************************************************************************

inf = 10e10;
inc = 0;

% distances between each node
D = [NaN,NaN,67.5267445282944,257.604928108002,205.510412641924,121.115889764507,NaN,NaN,NaN,NaN;NaN,NaN,184.794152867616,102.523904974127,87.3620946084542,35.1170417271381,56.5464272842381,81.6548992792183,64.5180265101702,77.2909860528746;NaN,NaN,NaN,NaN,252.939219211200,NaN,NaN,NaN,NaN,NaN;NaN,NaN,NaN,NaN,111.427643628032,136.604049398712,114.407507148725,81.8935858781909,NaN,NaN;NaN,NaN,NaN,NaN,NaN,111.208133335023,36.2319012936076,29.9826486137487,82.3369643027440,NaN;NaN,NaN,NaN,NaN,NaN,NaN,75.7497882810125,NaN,56.6927589813483,54.1291244607479;NaN,NaN,NaN,NaN,NaN,NaN,NaN,48.5933097464955,49.7772271559952,79.7234552958686;NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN;NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,31.1491841568940;NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN];
[size_D,cols] = size(D);

% Initialise Q = Open Set, nodes to be visited
Q = ones(1,size_D);
% Initaialise S visited set
S = zeros(1,size_D);

% Initilise cost matrix V, store min cost to each node
V = ones(1,size_D)*inf;    %Min cost to each node
V(start) = 0;   %cost to starting node is 0

% loop as long as there are nodes to reach
while norm(Q) ~= 0

    % Select first X from Q
    for j=1:size_D
        if Q(j) ~= 0
            x = j;
            break
        end
    end
    % Move X from Q -> S
    
    % Repeat for all y Paths from X
    
    % If distance to R(X) from X is < current V(X)
        % Then update V(x)
        % Update parent list, now best way to R(X) is through X
        % Add Q to the open set
    

end   %end while loop
