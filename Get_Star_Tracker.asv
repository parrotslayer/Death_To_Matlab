clc
clear all
close all

deg2rad = pi/180;
r = 10e10;
Omega = 142.1145*deg2rad;
omega = 25.5213*deg2rad;
num_stars = 100;
inc = 98.7401*deg2rad;

%**************************** INPUT VARIABLES *************************
FOV = 90*deg2rad;   %field of view of star tracker
% Given ECEF position of the satellite and the Ground Station Coordinates
Sat_ECEF = [-3.9297e6;-4.5532e6;1.0266e7];
GS_LLH = [-33, 151,52];
%Convert satellite position to LLH
Sat_LLH = ECEF_to_LLH(Sat_ECEF(1),Sat_ECEF(2),Sat_ECEF(3));

t_epoch = [2003 03 18 0 0 0];
t_VE2002 = [2002 03 20 19 16 0];    %date of last VE UT
t_VE = etime(t_epoch,t_VE2002);


%get star positions (do outside loop?)
Star_ECI = Summon_Stars(r,inc,Omega,omega,num_stars);
%given star positions, need to convert to ECEF
Star_ECEF = zeros(num_stars,3);
for i = 1:num_stars
    Star_ECEF(i,:) = ECI_to_ECEF([Star_ECI(i,:),t_VE]);
end
%**********************************************************************
function output = Get_Star_Tracker(Sat_LLH,T_VE,Star_ECI,FOV )
%% Check if star in FOV
% get number of stars
[num_stars, c] = size(Star_ECI);

% Number of visible satellites
vis = 0;
% Loop for all stars
for i = 1:num_stars
    %Convert ECEF position of the star to LGCV wrt the Satellite
    Star_LGCV = ECEF_to_LGCV(Sat_LLH(1),Sat_LLH(2),Sat_LLH(3)...
        , Star_ECEF(i,1), Star_ECEF(i,2), Star_ECEF(i,3));
    
    % Convert LGCV of Star to RAE (radians)
    Star_RAE = LGCV_to_RAE(Star_LGCV);

    % Check if elevation witin FOV
    if Star_RAE(3) > (pi/2 - FOV/2) && Star_RAE(3) < (pi/2 + FOV/2)
        %increment number of seen stars and store LGCV coordinates
        vis = vis + 1;
        %output normalised LGCV vector
        visible_stars(vis,:) = Star_LGCV/norm(Star_LGCV);
    end
end
end
